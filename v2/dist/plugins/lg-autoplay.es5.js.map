{"version":3,"file":"lg-autoplay.es5.js","sources":["../../src/plugins/autoplay/lg-autoplay-settings.ts","../../src/plugins/autoplay/lg-autoplay.ts"],"sourcesContent":["export interface AutoplaySettings {\n    autoplay: boolean;\n    pause: number;\n    progressBar: boolean;\n    forceAutoplay: boolean;\n    autoplayControls: boolean;\n    appendAutoplayControlsTo: string;\n}\nexport const autoplaySettings: AutoplaySettings = {\n    autoplay: false,\n    pause: 5000,\n    progressBar: true,\n    forceAutoplay: false,\n    autoplayControls: true,\n    appendAutoplayControlsTo: '.lg-toolbar',\n};\n","import { LightGallery } from '../../lightgallery';\nimport { AutoplaySettings, autoplaySettings } from './lg-autoplay-settings';\n\n/**\n * Creates the autoplay plugin.\n * @param {object} element - lightGallery element\n */\nexport class Autoplay {\n    core: LightGallery;\n    s: AutoplaySettings;\n    interval!: any;\n    fromAuto!: boolean;\n    pausedOnTouchDrag!: boolean;\n    pausedOnSlideChange!: boolean;\n\n    constructor(instance: LightGallery) {\n        // get lightGallery core plugin data\n        this.core = instance;\n        // extend module default settings with lightGallery core settings\n        this.s = Object.assign({}, autoplaySettings, this.core.s);\n\n        // Execute only if items are above 1\n        if (this.core.items.length < 2) {\n            return this;\n        }\n        this.interval = false;\n\n        // Identify if slide happened from autoplay\n        this.fromAuto = true;\n\n        // Identify if autoplay canceled from touch/drag\n        this.pausedOnTouchDrag = false;\n\n        this.pausedOnSlideChange = false;\n\n        // do not allow progress bar if browser does not support css3 transitions\n        if (!this.core.doCss()) {\n            this.s.progressBar = false;\n        }\n\n        this.init();\n\n        return this;\n    }\n\n    init() {\n        // append autoplay controls\n        if (this.s.autoplayControls) {\n            this.controls();\n        }\n\n        // Create progress bar\n        if (this.s.progressBar) {\n            this.core.outer\n                .find('.lg')\n                .append(\n                    '<div class=\"lg-progress-bar\"><div class=\"lg-progress\"></div></div>',\n                );\n        }\n\n        // Start autoplay\n        if (this.s.autoplay) {\n            this.core.LGel.once('onSlideItemLoad.lg.autoplay', () => {\n                this.startAuto();\n            });\n        }\n\n        // cancel interval on touchstart and dragstart\n        this.core.LGel.on(\n            'onDragstart.lg.autoplay touchstart.lg.autoplay',\n            () => {\n                if (this.interval) {\n                    this.cancelAuto();\n                    this.pausedOnTouchDrag = true;\n                }\n            },\n        );\n\n        // restore autoplay if autoplay canceled from touchstart / dragstart\n        this.core.LGel.on(\n            'onDragend.lg.autoplay touchend.lg.autoplay onSlideClick.lg.autoplay',\n            () => {\n                if (!this.interval && this.pausedOnTouchDrag) {\n                    this.startAuto();\n                    this.pausedOnTouchDrag = false;\n                }\n            },\n        );\n\n        this.core.LGel.on('onBeforeSlide.lg.autoplay', () => {\n            this.showProgressBar();\n            if (!this.fromAuto && this.interval) {\n                this.cancelAuto();\n                this.pausedOnSlideChange = true;\n            } else {\n                this.pausedOnSlideChange = false;\n            }\n            this.fromAuto = false;\n        });\n\n        // restore autoplay if autoplay canceled from touchstart / dragstart\n        this.core.LGel.on('onAfterSlide.lg.autoplay', () => {\n            if (\n                this.pausedOnSlideChange &&\n                !this.interval &&\n                this.s.forceAutoplay\n            ) {\n                this.startAuto();\n                this.pausedOnSlideChange = false;\n            }\n        });\n\n        // set progress\n        this.showProgressBar();\n    }\n\n    showProgressBar() {\n        if (this.s.progressBar && this.fromAuto) {\n            const _$progressBar = this.core.outer.find('.lg-progress-bar');\n            const _$progress = this.core.outer.find('.lg-progress');\n            if (this.interval) {\n                _$progress.removeAttr('style');\n                _$progressBar.removeClass('lg-start');\n                setTimeout(() => {\n                    _$progress.css(\n                        'transition',\n                        'width ' +\n                            (this.core.s.speed + this.s.pause) +\n                            'ms ease 0s',\n                    );\n                    _$progressBar.addClass('lg-start');\n                }, 20);\n            }\n        }\n    }\n\n    // Manage autoplay via play/stop buttons\n    controls() {\n        const _html =\n            '<button type=\"button\" class=\"lg-autoplay-button lg-icon\"></button>';\n\n        // Append autoplay controls\n        this.core.outer.find(this.s.appendAutoplayControlsTo).append(_html);\n\n        this.core.outer\n            .find('.lg-autoplay-button')\n            .first()\n            .on('click.lg.autoplay', () => {\n                if (this.core.outer.hasClass('lg-show-autoplay')) {\n                    this.cancelAuto();\n                } else {\n                    if (!this.interval) {\n                        this.startAuto();\n                    }\n                }\n            });\n    }\n\n    // Autostart gallery\n    startAuto() {\n        this.core.outer\n            .find('.lg-progress')\n            .css(\n                'transition',\n                'width ' + (this.core.s.speed + this.s.pause) + 'ms ease 0s',\n            );\n        this.core.outer.addClass('lg-show-autoplay');\n        this.core.outer.find('.lg-progress-bar').addClass('lg-start');\n\n        this.interval = setInterval(() => {\n            if (this.core.index + 1 < this.core.items.length) {\n                this.core.index++;\n            } else {\n                this.core.index = 0;\n            }\n\n            this.fromAuto = true;\n            this.core.slide(this.core.index, false, false, 'next');\n        }, this.core.s.speed + this.s.pause);\n    }\n\n    // cancel Autostart\n    cancelAuto() {\n        if (this.interval) {\n            this.core.outer.find('.lg-progress').removeAttr('style');\n            this.core.outer.removeClass('lg-show-autoplay');\n            this.core.outer.find('.lg-progress-bar').removeClass('lg-start');\n        }\n        clearInterval(this.interval);\n        this.interval = false;\n    }\n\n    destroy(clear?: boolean): void {\n        this.cancelAuto();\n        if (clear) {\n            this.core.outer.find('.lg-progress-bar').remove();\n            // Remove all event listeners added by autoplay plugin\n            this.core.LGel.off('.lg.autoplay');\n        }\n    }\n}\n\nwindow.lgModules = window.lgModules || {};\nwindow.lgModules.autoplay = Autoplay;\n"],"names":[],"mappings":"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"}