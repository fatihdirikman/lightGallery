{"version":3,"file":"lightgallery.js","sourceRoot":"","sources":["src/lightgallery.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,YAAY,MAAM,cAAc,CAAC;AAIxC,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,UAAU;IAA5C;;QAoCI,aAAQ,GAAkC,EAAE,CAAC;IASjD,CAAC;IA1CG,YAAY;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAC1C,YAAY,CACA,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACrC,MAAM,IAAI,GAAI,IAAI,CAAC,UAAyB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACnE,MAAM,UAAU,GAAI,IAAwB,CAAC,aAAa,CAAC;YACvD,OAAO,EAAE,IAAI;SAChB,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CACjC,UAAU,EACV,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAC/C,CAAC;QACF,MAAM,WAAW,GAAG;YAChB,QAAQ,EAAE,CAAQ;SACrB,CAAC;QACF,MAAM,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,WAAW,EAAE,CAAC;QACxD,YAAY,CAAE,IAA+B,EAAE,UAAU,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAgBD,MAAM;QACF,OAAO,IAAI,CAAA;;;;SAIV,CAAC;IACN,CAAC;CACJ,CAAA;AATG;IAZC,QAAQ,CAAC;QACN,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,CAAC,KAAoB,EAAE,IAAS,EAAE,EAAE;YAC3C,sBAAsB;YACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAe,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;YAC1C,OAAO,YAAY,CAAC;YACpB,qDAAqD;QACzD,CAAC;KACJ,CAAC;8CAC2C;AApCpC,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CA6CxB;SA7CY,YAAY","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport lightGallery from 'lightgallery';\nimport { LightGallerySettings } from 'lightgallery/lg-settings';\n\n@customElement('light-gallery')\nexport class LightGallery extends LitElement {\n    private container!: HTMLElement;\n\n    firstUpdated() {\n        this.container = this.renderRoot.querySelector(\n            '#container',\n        ) as HTMLElement;\n        console.log(this.container.children);\n        const slot = (this.shadowRoot as ShadowRoot).querySelector('slot');\n        const childNodes = (slot as HTMLSlotElement).assignedNodes({\n            flatten: true,\n        });\n        const s = Array.prototype.filter.call(\n            childNodes,\n            (node) => node.nodeType == Node.ELEMENT_NODE,\n        );\n        const vueSettings = {\n            selector: s as any,\n        };\n        const lgSettings = { ...this.settings, ...vueSettings };\n        lightGallery((this as unknown) as HTMLElement, lgSettings);\n        console.log(this);\n    }\n\n    @property({\n        type: Object,\n        converter: (value: string | null, type: any) => {\n            // `value` is a string\n            console.log(value);\n            console.log(type);\n            const convertedVal = JSON.parse(value as string);\n            console.log('convertedVal', convertedVal);\n            return convertedVal;\n            // Convert it to a value of type `type` and return it\n        },\n    })\n    settings: Partial<LightGallerySettings> = {};\n\n    render() {\n        return html`\n            <div id=\"container\">\n                <slot></slot>\n            </div>\n        `;\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'light-gallery': LightGallery;\n    }\n}\n"]}