{"version":3,"file":"lg-autoplay.umd.js","sources":["../../src/plugins/autoplay/lg-autoplay-settings.ts","../../src/plugins/autoplay/lg-autoplay.ts"],"sourcesContent":["export interface AutoplaySettings {\n    autoplay: boolean;\n    pause: number;\n    progressBar: boolean;\n    forceAutoplay: boolean;\n    autoplayControls: boolean;\n    appendAutoplayControlsTo: string;\n}\nexport const autoplaySettings: AutoplaySettings = {\n    autoplay: false,\n    pause: 5000,\n    progressBar: true,\n    forceAutoplay: false,\n    autoplayControls: true,\n    appendAutoplayControlsTo: '.lg-toolbar',\n};\n","import { LightGallery } from '../../lightgallery';\nimport { AutoplaySettings, autoplaySettings } from './lg-autoplay-settings';\n\n/**\n * Creates the autoplay plugin.\n * @param {object} element - lightGallery element\n */\nexport class Autoplay {\n    core: LightGallery;\n    s: AutoplaySettings;\n    interval!: any;\n    fromAuto!: boolean;\n    pausedOnTouchDrag!: boolean;\n    pausedOnSlideChange!: boolean;\n\n    constructor(instance: LightGallery) {\n        // get lightGallery core plugin data\n        this.core = instance;\n        // extend module default settings with lightGallery core settings\n        this.s = Object.assign({}, autoplaySettings, this.core.s);\n\n        // Execute only if items are above 1\n        if (this.core.items.length < 2) {\n            return this;\n        }\n        this.interval = false;\n\n        // Identify if slide happened from autoplay\n        this.fromAuto = true;\n\n        // Identify if autoplay canceled from touch/drag\n        this.pausedOnTouchDrag = false;\n\n        this.pausedOnSlideChange = false;\n\n        // do not allow progress bar if browser does not support css3 transitions\n        if (!this.core.doCss()) {\n            this.s.progressBar = false;\n        }\n\n        this.init();\n\n        return this;\n    }\n\n    init() {\n        // append autoplay controls\n        if (this.s.autoplayControls) {\n            this.controls();\n        }\n\n        // Create progress bar\n        if (this.s.progressBar) {\n            this.core.outer\n                .find('.lg')\n                .append(\n                    '<div class=\"lg-progress-bar\"><div class=\"lg-progress\"></div></div>',\n                );\n        }\n\n        // Start autoplay\n        if (this.s.autoplay) {\n            this.core.LGel.once('onSlideItemLoad.lg.autoplay', () => {\n                this.startAuto();\n            });\n        }\n\n        // cancel interval on touchstart and dragstart\n        this.core.LGel.on(\n            'onDragstart.lg.autoplay touchstart.lg.autoplay',\n            () => {\n                if (this.interval) {\n                    this.cancelAuto();\n                    this.pausedOnTouchDrag = true;\n                }\n            },\n        );\n\n        // restore autoplay if autoplay canceled from touchstart / dragstart\n        this.core.LGel.on(\n            'onDragend.lg.autoplay touchend.lg.autoplay onSlideClick.lg.autoplay',\n            () => {\n                if (!this.interval && this.pausedOnTouchDrag) {\n                    this.startAuto();\n                    this.pausedOnTouchDrag = false;\n                }\n            },\n        );\n\n        this.core.LGel.on('onBeforeSlide.lg.autoplay', () => {\n            this.showProgressBar();\n            if (!this.fromAuto && this.interval) {\n                this.cancelAuto();\n                this.pausedOnSlideChange = true;\n            } else {\n                this.pausedOnSlideChange = false;\n            }\n            this.fromAuto = false;\n        });\n\n        // restore autoplay if autoplay canceled from touchstart / dragstart\n        this.core.LGel.on('onAfterSlide.lg.autoplay', () => {\n            if (\n                this.pausedOnSlideChange &&\n                !this.interval &&\n                this.s.forceAutoplay\n            ) {\n                this.startAuto();\n                this.pausedOnSlideChange = false;\n            }\n        });\n\n        // set progress\n        this.showProgressBar();\n    }\n\n    showProgressBar() {\n        if (this.s.progressBar && this.fromAuto) {\n            const _$progressBar = this.core.outer.find('.lg-progress-bar');\n            const _$progress = this.core.outer.find('.lg-progress');\n            if (this.interval) {\n                _$progress.removeAttr('style');\n                _$progressBar.removeClass('lg-start');\n                setTimeout(() => {\n                    _$progress.css(\n                        'transition',\n                        'width ' +\n                            (this.core.s.speed + this.s.pause) +\n                            'ms ease 0s',\n                    );\n                    _$progressBar.addClass('lg-start');\n                }, 20);\n            }\n        }\n    }\n\n    // Manage autoplay via play/stop buttons\n    controls() {\n        const _html =\n            '<button type=\"button\" class=\"lg-autoplay-button lg-icon\"></button>';\n\n        // Append autoplay controls\n        this.core.outer.find(this.s.appendAutoplayControlsTo).append(_html);\n\n        this.core.outer\n            .find('.lg-autoplay-button')\n            .first()\n            .on('click.lg.autoplay', () => {\n                if (this.core.outer.hasClass('lg-show-autoplay')) {\n                    this.cancelAuto();\n                } else {\n                    if (!this.interval) {\n                        this.startAuto();\n                    }\n                }\n            });\n    }\n\n    // Autostart gallery\n    startAuto() {\n        this.core.outer\n            .find('.lg-progress')\n            .css(\n                'transition',\n                'width ' + (this.core.s.speed + this.s.pause) + 'ms ease 0s',\n            );\n        this.core.outer.addClass('lg-show-autoplay');\n        this.core.outer.find('.lg-progress-bar').addClass('lg-start');\n\n        this.interval = setInterval(() => {\n            if (this.core.index + 1 < this.core.items.length) {\n                this.core.index++;\n            } else {\n                this.core.index = 0;\n            }\n\n            this.fromAuto = true;\n            this.core.slide(this.core.index, false, false, 'next');\n        }, this.core.s.speed + this.s.pause);\n    }\n\n    // cancel Autostart\n    cancelAuto() {\n        if (this.interval) {\n            this.core.outer.find('.lg-progress').removeAttr('style');\n            this.core.outer.removeClass('lg-show-autoplay');\n            this.core.outer.find('.lg-progress-bar').removeClass('lg-start');\n        }\n        clearInterval(this.interval);\n        this.interval = false;\n    }\n\n    destroy(clear?: boolean): void {\n        this.cancelAuto();\n        if (clear) {\n            this.core.outer.find('.lg-progress-bar').remove();\n            // Remove all event listeners added by autoplay plugin\n            this.core.LGel.off('.lg.autoplay');\n        }\n    }\n}\n\nwindow.lgModules = window.lgModules || {};\nwindow.lgModules.autoplay = Autoplay;\n"],"names":[],"mappings":"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"}